# This workflow will create PR to update the configuration properties files in MS docs repository: https://github.com/MicrosoftDocs/azure-dev-docs-pr/tree/main/articles/java/spring-framework/includes/spring-cloud-azure
# For example, this PR is created by this workflow: https://github.com/MicrosoftDocs/azure-dev-docs-pr/pull/3035

name: Update the configuration properties files in MS docs repo
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  update-change:
    runs-on: ubuntu-latest
    steps:
      - name: Build latest azure-sdk-for-java repository
        run: |
          git init azure-sdk-for-java
          cd azure-sdk-for-java
          git remote add origin https://github.com/Azure/azure-sdk-for-java.git
          git config core.sparsecheckout true
          echo "sdk/spring" >> .git/info/sparse-checkout
          echo "eng" >> .git/info/sparse-checkout
          echo "sdk/keyvault" >> .git/info/sparse-checkout
          echo "sdk/boms" >> .git/info/sparse-checkout
          echo "sdk/aot" >> .git/info/sparse-checkout
          git pull --depth=1 origin main
          mvn clean install -Dmaven.javadoc.skip=true -DskipTests \
            -Dcheckstyle.skip=true \
            -ntp \
            -Dspotbugs.skip=true \
            -Drevapi.skip=true -Djacoco.skip=true \
            -Dparallel-test-playback \
            -Pdev \
            -f sdk/spring/pom.xml

      - uses: actions/checkout@v3
        name: Checkout microsoft/spring-cloud-azure

      - name: Generate configuration properties files
        run: |
          mkdir spring-cloud-azure-markdown-appdendix-generator/src/main/asciidoc
          ./mvnw clean install -P markdown-docs -pl spring-cloud-azure-markdown-appdendix-generator -DskipTests

      - name: Get project_version and branch_name
        id: branch
        run: |
          project_version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=branch_name::spring-cloud-azure_${project_version%-*}
          echo ::set-output name=project_version::${project_version%-*}

      - uses: actions/checkout@v3
        name: Checkout MicrosoftDocs/azure-dev-docs-pr
        with:
          repository: MicrosoftDocs/azure-dev-docs-pr
          ref: 'main'
          path: 'azure-dev-docs-pr'
          token: ${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_ACCESS_TOKEN }}
          fetch-depth: '0'

      - name: Check whether topic branch exist
        id: check-whether-topic-branch-exist
        run: |
          cd azure-dev-docs-pr
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git remote add ${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_USERNAME }} https://github.com/${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_USERNAME }}/azure-dev-docs-pr.git
          git fetch ${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_USERNAME }}
          echo ::set-output name=topic_branch_exists::$(git ls-remote --heads ${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_USERNAME }} ${{ steps.branch.outputs.branch_name }} | wc -l) # Check if branch exists

      - name: Commit files changes to topic branch
        run: |
          cd azure-dev-docs-pr
          if [[ ${{ steps.check-whether-topic-branch-exist.outputs.topic_branch_exists }} -eq 1 ]] ; then
            echo "The branch ${{ steps.branch.outputs.branch_name }} already exists."
            git checkout ${{ steps.branch.outputs.branch_name }}
          elif [[ ${{ steps.check-whether-topic-branch-exist.outputs.topic_branch_exists }} -eq 0 ]] ; then
            echo "The branch ${{ steps.branch.outputs.branch_name }} does not exist, create."
            git checkout -b ${{ steps.branch.outputs.branch_name }}
          fi
          cp -f ../spring-cloud-azure-markdown-appdendix-generator/src/main/asciidoc/configuration-*.md articles/java/spring-framework/includes/spring-cloud-azure
          if [[ -n "$(git status -s)" ]] ;then
            git add ./articles/java/spring-framework/includes/spring-cloud-azure/configuration-*.md
            git commit -m "Update the configuration properties for Spring Cloud Azure: ${{ steps.branch.outputs.project_version }}. This commit is created by GitHub Action: https://github.com/microsoft/spring-cloud-azure/actions"
            git push "https://${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_USERNAME }}:${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_ACCESS_TOKEN }}@github.com/${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_USERNAME }}/azure-dev-docs-pr.git"
          else
            echo "No file changes, no commits."
          fi

      - name: Create Pull Request
        if: ${{ steps.check-whether-topic-branch-exist.outputs.topic_branch_exists == '0' }}
        uses: vsoch/pull-request-action@master
        env:
          PULL_REQUEST_TOKEN: ${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_ACCESS_TOKEN }}
          PULL_REQUEST_REPOSITORY: MicrosoftDocs/azure-dev-docs-pr
          PULL_REQUEST_TITLE: "Update the configuration properties for Spring Cloud Azure: ${{ steps.branch.outputs.project_version }}"
          PULL_REQUEST_FROM_BRANCH: ${{ secrets.UPDATE_PROPERTIES_TABLE_IN_MS_DOCS_GITHUB_USERNAME }}:${{ steps.branch.outputs.branch_name }}
          PULL_REQUEST_BRANCH: "main"
          PULL_REQUEST_BODY: "Update the configuration properties for Spring Cloud Azure: ${{ steps.branch.outputs.project_version }}."
          PULL_REQUEST_DRAFT: true
